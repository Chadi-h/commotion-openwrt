#DEBUG="echo"

#===  FUNCTION  ================================================================
#          NAME:  unset_splash_if
#   DESCRIPTION:  Unset luci_splash interface/zone settings
#    PARAMETERS:  config name of network
#       RETURNS:  0 on success
#===============================================================================

unset_splash_if() {
  local config="$1"
 
  config_cb() {
    local type="$1"
    local name="$2"
  
    case "$type" in
      iface) 
        case $(uci_get luci_splash "$name" network) in
          "$config")
            uci_remove luci_splash "$name"
            ;; 
        esac
        ;;
    esac
  }
  config_load luci_splash
  
  return 0
}

#===  FUNCTION  ================================================================
#          NAME:  set_splash_if
#   DESCRIPTION:  Set luci_splash interface settings
#    PARAMETERS:  2; config name of network, firewall zone
#       RETURNS:  0 on success
#===============================================================================

set_splash_if() {
  local config="$1"
  local zone="$2"
  
  uci_add luci_splash iface 
  uci_set luci_splash @iface[-1] network "$config"
  uci_set luci_splash @iface[-1] zone "$zone"
  return 0
}

#===  FUNCTION  ================================================================
#          NAME:  get_fwzone_if
#   DESCRIPTION:  Get firewall zone for corresponding interface.
#    PARAMETERS:  config name of network
#       RETURNS:  0 on success
#===============================================================================

get_fwzone_if() {
  local config="$1"
  local fwzone=
  
  config_cb() {
    local type="$1"
    local name="$2"
  
    case "$type" in
      zone) 
        case $(uci_get firewall "$name" network) in
          "$config")
            fwzone=$(uci_get firewall "$name" name)
            ;; 
        esac
        ;;
    esac
  }
  config_load firewall
  echo "$fwzone" && return 0
}

#===  FUNCTION  ================================================================
#          NAME:  splash_boot
#   DESCRIPTION:  Jumpstart the initialization of luci_splash at boot time
#    PARAMETERS:  None
#       RETURNS:  0 on success
#===============================================================================

splash_boot() {
  grep -qs splash /etc/config/uhttpd || {                                        
    $DEBUG uci_add uhttpd uhttpd splash
    $DEBUG uci_set uhttpd splash home "/www/cgi-bin/splash/"                                 
    $DEBUG uci_set uhttpd splash interpreter ".sh=/bin/ash"                                 
    $DEBUG uci_set uhttpd splash listen_http "8082"                                
    $DEBUG uci_set uhttpd splash index_page "splash.sh"                                
    $DEBUG uci_set uhttpd splash error_page "/splash.sh"                                
    $DEBUG uci_commit uhttpd
  } 
  return 0
}

[ -f "/etc/config/luci_splash" ] && {
case $PROTO in
  apif)
    [ "$RESET" = 1 ] && {
      case $ACTION in
        postup)
          case $(uci_get network "$INTERFACE" splash "1") in
            0)
              $DEBUG splash_boot
              $DEBUG unset_splash_if $INTERFACE
              $DEBUG uci_commit luci_splash
              $DEBUG /etc/init.d/luci_splash restart
              $DEBUG /etc/init.d/uhttpd restart
            ;;
            1)
              $DEBUG splash_boot
              $DEBUG unset_splash_if $INTERFACE
              $DEBUG set_splash_if $INTERFACE $(get_fwzone_if "$INTERFACE") 
              $DEBUG uci_commit luci_splash
              $DEBUG /etc/init.d/luci_splash restart
              $DEBUG /etc/init.d/uhttpd restart
            ;;
          esac
        ;;
        predown)
          case $(uci_get network "$INTERFACE" splash "1") in
            1)
              $DEBUG unset_splash_if $INTERFACE 
              $DEBUG uci_commit luci_splash
              $DEBUG /etc/init.d/luci_splash restart
              $DEBUG /etc/init.d/uhttpd restart
            ;;
          esac
        ;;
      esac
    }
  ;;
esac
}
